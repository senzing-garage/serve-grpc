version: "2"
run:
  modules-download-mode: readonly
linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - err113
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exhaustruct
    - exptostd
    - fatcontext
    - forbidigo
    - forcetypeassert
    - funcorder
    - funlen
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - grouper
    - iface
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - tagalign
    - tagliatelle
    - testableexamples
    - testifylint
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint
  disable:
    - gochecknoglobals
    - gochecknoinits
    - lll
    - paralleltest
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - third_party$
      - builtin$
      - examples$
  settings:
    cyclop:
      max-complexity: 11
    depguard:
      rules:
        prevent_unmaintained_packages:
          list-mode: lax # allow unless explicitely denied
          allow:
            - github.com/stretchr/testify/*
          deny:
            - pkg: io/ioutil
              desc: "replaced by io and os packages since Go 1.16: https://tip.golang.org/doc/go1.16#ioutil"
    dupl:
      threshold: 250
    exhaustruct:
      exclude:
        - '.+/cobra\.Command$'
        - '.+/grpcserver\.BasicGrpcServer$'
        - '.+/http\.Server$'
        - '.+/httpserver\.BasicHTTPServer$'
        - '.+/initializer\.BasicInitializer$'
        - '.+/observer\.NullObserver$'
        - '.+/szconfigmanagerserver\.SzConfigManagerServer$'
        - '.+/szconfigserver\.SzConfigServer$'
        - '.+/szdiagnosticserver\.SzDiagnosticServer$'
        - '.+/szengine\.FindPathByEntityIdRequest$'
        - '.+/szengine\.FindPathByRecordIdRequest$'
        - '.+/szengine\.GetEntityByRecordIdRequest$'
        - '.+/szengine\.SearchByAttributesRequest$'
        - '.+/szengineserver_test\.GetEntityByRecordIDResponse$'
        - '.+/szengineserver_test\.TestMetadataForAddRecord$'
        - '.+/szengineserver_test\.TestMetadataForDeleteRecord$'
        - '.+/szengineserver_test\.TestMetadataForFindInterestingEntitiesByEntityID$'
        - '.+/szengineserver_test\.TestMetadataForFindInterestingEntitiesByRecordID$'
        - '.+/szengineserver_test\.TestMetadataForFindNetworkByEntityID$'
        - '.+/szengineserver_test\.TestMetadataForFindNetworkByRecordID$'
        - '.+/szengineserver_test\.TestMetadataForFindPathByEntityID$'
        - '.+/szengineserver_test\.TestMetadataForFindPathByRecordID$'
        - '.+/szengineserver_test\.TestMetadataForGetEntityByEntityID$'
        - '.+/szengineserver_test\.TestMetadataForGetEntityByRecordID$'
        - '.+/szengineserver_test\.TestMetadataForGetRecord$'
        - '.+/szengineserver_test\.TestMetadataForGetVirtualEntityByRecordID$'
        - '.+/szengineserver_test\.TestMetadataForHowEntityByEntityID$'
        - '.+/szengineserver_test\.TestMetadataForPreprocessRecord$'
        - '.+/szengineserver_test\.TestMetadataForProcessRedoRecord$'
        - '.+/szengineserver_test\.TestMetadataForReevaluateEntity$'
        - '.+/szengineserver_test\.TestMetadataForReevaluateRecord$'
        - '.+/szengineserver_test\.TestMetadataForSearchByAttributes$'
        - '.+/szengineserver_test\.TestMetadataForWhyEntities$'
        - '.+/szengineserver_test\.TestMetadataForWhyRecordInEntity$'
        - '.+/szengineserver_test\.TestMetadataForWhyRecords$'
        - '.+/szengineserver_test\.TestMetadataForWhySearch$'
        - '.+/szengineserver\.SzEngineServer$'
        - '.+/szproductserver\.SzProductServer$'
        - '.+/tls\.Config$'
    funlen:
      lines: 95
    ireturn:
      allow:
        - error
        - grpc.ServerOption
        - logging.Logging
        - observer.Observer
        - senzing.SzConfig
        - senzing.SzConfigManager
        - senzing.SzDiagnostic
        - senzing.SzEngine
        - senzing.SzProduct
    mnd:
      ignored-functions:
        - '^grpcServer\.log$'
        - '^httpServer\.log$'
        - '^logger\.Log$'
        - '^logging\.OptionCallerSkip$'
        - '^server\.traceEntry$'
        - '^server\.traceExit$'
    tagliatelle:
      case:
        rules:
          json: upperSnake
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
    - golines
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
  settings:
    golines:
      max-len: 120
